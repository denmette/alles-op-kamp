name: Java CI with Maven Wrapper

on:
  workflow_dispatch:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk

concurrency:
  group: build-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  packages: write

env:
  JAVA_VERSION: '22'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up JDK
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'liberica'
          cache: 'maven'

      - name: Build with Maven Wrapper
        run: ./mvnw clean verify --file pom.xml --fail-at-end --update-snapshots

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Create docker image
        if: ${{ !github.head_ref }}
        run: ./mvnw spring-boot:build-image -Pproduction -DskipTests -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push Docker image to GitHub Container Registry
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          flyctl auth token ${{ env.FLY_API_TOKEN }}
          flyctl deploy --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --app ${{ env.FLY_APP_NAME }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_APP_NAME: ${{ secrets.FLY_APP_NAME }}